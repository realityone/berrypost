// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BerryPostMessageGeneratorClient is the client API for BerryPostMessageGenerator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BerryPostMessageGeneratorClient interface {
	GenerateMessage(ctx context.Context, in *GenerateMessageRequest, opts ...grpc.CallOption) (*GenerateMessageResponse, error)
}

type berryPostMessageGeneratorClient struct {
	cc grpc.ClientConnInterface
}

func NewBerryPostMessageGeneratorClient(cc grpc.ClientConnInterface) BerryPostMessageGeneratorClient {
	return &berryPostMessageGeneratorClient{cc}
}

func (c *berryPostMessageGeneratorClient) GenerateMessage(ctx context.Context, in *GenerateMessageRequest, opts ...grpc.CallOption) (*GenerateMessageResponse, error) {
	out := new(GenerateMessageResponse)
	err := c.cc.Invoke(ctx, "/berrypost.v1.BerryPostMessageGenerator/GenerateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BerryPostMessageGeneratorServer is the server API for BerryPostMessageGenerator service.
// All implementations must embed UnimplementedBerryPostMessageGeneratorServer
// for forward compatibility
type BerryPostMessageGeneratorServer interface {
	GenerateMessage(context.Context, *GenerateMessageRequest) (*GenerateMessageResponse, error)
	mustEmbedUnimplementedBerryPostMessageGeneratorServer()
}

// UnimplementedBerryPostMessageGeneratorServer must be embedded to have forward compatible implementations.
type UnimplementedBerryPostMessageGeneratorServer struct {
}

func (UnimplementedBerryPostMessageGeneratorServer) GenerateMessage(context.Context, *GenerateMessageRequest) (*GenerateMessageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GenerateMessage not implemented")
}
func (UnimplementedBerryPostMessageGeneratorServer) mustEmbedUnimplementedBerryPostMessageGeneratorServer() {
}

// UnsafeBerryPostMessageGeneratorServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BerryPostMessageGeneratorServer will
// result in compilation errors.
type UnsafeBerryPostMessageGeneratorServer interface {
	mustEmbedUnimplementedBerryPostMessageGeneratorServer()
}

func RegisterBerryPostMessageGeneratorServer(s grpc.ServiceRegistrar, srv BerryPostMessageGeneratorServer) {
	s.RegisterService(&BerryPostMessageGenerator_ServiceDesc, srv)
}

func _BerryPostMessageGenerator_GenerateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GenerateMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BerryPostMessageGeneratorServer).GenerateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/berrypost.v1.BerryPostMessageGenerator/GenerateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BerryPostMessageGeneratorServer).GenerateMessage(ctx, req.(*GenerateMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BerryPostMessageGenerator_ServiceDesc is the grpc.ServiceDesc for BerryPostMessageGenerator service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BerryPostMessageGenerator_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "berrypost.v1.BerryPostMessageGenerator",
	HandlerType: (*BerryPostMessageGeneratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GenerateMessage",
			Handler:    _BerryPostMessageGenerator_GenerateMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message_generator.proto",
}
